<UserControl x:Class="NETworkManager.Views.PingMonitorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"          
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"   
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:mahAppsControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:validators="clr-namespace:NETworkManager.Validators"
             xmlns:converters="clr-namespace:NETworkManager.Converters"
             xmlns:dialogs="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
             xmlns:viewModels="clr-namespace:NETworkManager.ViewModels"
             xmlns:localization="clr-namespace:NETworkManager.Resources.Localization"
             xmlns:networkManager="clr-namespace:NETworkManager"             
             dialogs:DialogParticipation.Register="{Binding}"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance viewModels:PingMonitorViewModel}">
    <UserControl.Resources>
        <converters:IntZeroReverseToVisibilityCollapsedConverter x:Key="IntZeroReverseToVisibilityCollapsedConverter" />
        <converters:IntZeroToVisibilityCollapsedConverter x:Key="IntZeroToVisibilityCollapsedConverter" />
        <converters:BooleanReverseToVisibilityCollapsedConverter x:Key="BooleanReverseToVisibilityCollapsedConverter" />
        <converters:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter" />
        <converters:NullOrEmptyToBoolConverter x:Key="NullOrEmptyToBoolConverter" />
    </UserControl.Resources>
    <TabControl Style="{StaticResource DefaultTabControl}">
        <TabItem Header="{x:Static localization:Strings.PingMonitor}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition MinWidth="{x:Static networkManager:GlobalStaticConfiguration.Profile_WidthCollapsed}" Width="{Binding ProfileWidth, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" MaxWidth="{x:Static networkManager:GlobalStaticConfiguration.Profile_MaxWidthExpanded}" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Row="0" Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.AddHost}" />
                    <Grid Grid.Row="1" Margin="0,0,0,20">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{x:Static localization:Strings.Host}" Style="{DynamicResource DefaultTextBlock}" VerticalAlignment="Center" />
                            <ComboBox Grid.Column="2" x:Name="ComboBoxHost" ItemsSource="{Binding HostHistoryView}" mah:TextBoxHelper.Watermark="{x:Static localization:StaticStrings.ExampleHostnameOrIPAddress}" Style="{StaticResource HistoryComboBox}">
                                <ComboBox.Text>
                                    <Binding Path="Host" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                        <Binding.ValidationRules>
                                            <validators:EmptyValidator ValidatesOnTargetUpdated="True" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </ComboBox.Text>
                            </ComboBox>
                            <Button Grid.Column="4" Command="{Binding AddHostCommand}" IsDefault="True" HorizontalAlignment="Right">
                                <Button.Resources>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ImageWithTextButton}">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=ComboBoxHost}" Value="True" >
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsWorking}" Value="True" >
                                                <Setter Property="IsEnabled" Value="False" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Resources>
                                <Button.Content>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Width="20" Height="20" Margin="10,5,0,5">
                                            <Rectangle.Resources>
                                                <VisualBrush x:Key="VisualControlPlay" Stretch="Uniform" Visual="{iconPacks:Material Kind=Play}" />
                                            </Rectangle.Resources>
                                            <Rectangle.Style>
                                                <Style TargetType="{x:Type Rectangle}">
                                                    <Setter Property="OpacityMask" Value="{StaticResource VisualControlPlay}" />
                                                    <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                                </Style>
                                            </Rectangle.Style>
                                        </Rectangle>
                                        <TextBlock Grid.Column="1" FontSize="14" Margin="10,5" TextAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Setter Property="Text" Value="{x:Static localization:Strings.Ping}"/>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                </Button.Content>
                            </Button>
                        </Grid>
                        <mahAppsControls:MetroProgressBar Grid.Row="1" Margin="0,10,0,0" Foreground="{DynamicResource AccentColorBrush}" IsIndeterminate="True">
                            <mahAppsControls:MetroProgressBar.Style>
                                <Style TargetType="{x:Type  mahAppsControls:MetroProgressBar}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsWorking}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </mahAppsControls:MetroProgressBar.Style>
                        </mahAppsControls:MetroProgressBar>
                        <TextBlock Grid.Row="2" Foreground="{DynamicResource AccentColorBrush}" Text="{Binding StatusMessage}" Visibility="{Binding DisplayStatusMessage, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Style="{DynamicResource DefaultTextBlock}" Margin="0,10,0,0" />
                    </Grid>
                    <TextBlock Grid.Row="2" Style="{StaticResource HeaderTextBlock}" Text="{x:Static localization:Strings.Hosts}" />
                    <ScrollViewer Grid.Row="3" Style="{StaticResource DefaultScrollViewer}">
                    <ListView  ItemsSource="{Binding Hosts}" SelectedItem="{Binding SelectedHost}" Visibility="{Binding Hosts.Count, Converter={StaticResource IntZeroReverseToVisibilityCollapsedConverter}}" Background="Transparent" BorderThickness="0" SelectionMode="Single">
                        <!-- BUGFIX This has to be set, to enable mouse wheel scrolling -->
                        <ListView.Template>
                            <ControlTemplate>
                                <ItemsPresenter />
                            </ControlTemplate>
                        </ListView.Template>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <!-- /BUGFIX-->
                    </ListView>
                    </ScrollViewer>
                    <TextBlock Grid.Row="3" Foreground="{DynamicResource GrayBrush3}" Text="{x:Static localization:Strings.AddAHostToMonitor}" Visibility="{Binding Hosts.Count, Converter={StaticResource IntZeroToVisibilityCollapsedConverter}}" Style="{StaticResource HeaderTextBlock}" VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" TextAlignment="Center" Margin="10,0" />
                </Grid>
                <GridSplitter Grid.Column="1" Style="{StaticResource ProfileGridSplitter}" />
                <Expander Grid.Column="2" x:Name="ExpanderProfiles" Header="{x:Static localization:Strings.Profiles}" Style="{StaticResource RightExpander}" IsExpanded="{Binding ExpandProfileView}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="10" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBox x:Name="TextBoxSearch" Grid.Column="0" VerticalAlignment="Center" Text="{Binding Search, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource SearchTextBox}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding AddHostProfileCommand}" Key="Enter" />
                            </TextBox.InputBindings>
                        </TextBox>
                        <ListBox Grid.Column="0" Grid.Row="2" ItemsSource="{Binding Profiles}" Visibility="{Binding IsSearching, Converter={StaticResource BooleanReverseToVisibilityCollapsedConverter}}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedProfile}" Style="{StaticResource ProfileListBox}">
                            <ListBox.Resources>
                                <ContextMenu x:Key="ProfileContextMenu" Opened="ContextMenu_Opened" MinWidth="150">
                                    <MenuItem Header="{x:Static localization:Strings.Ping}" Command="{Binding AddHostProfileCommand}">
                                        <MenuItem.Icon>
                                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Play}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static localization:Strings.EditDots}" Command="{Binding EditProfileCommand}">
                                        <MenuItem.Icon>
                                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static localization:Strings.CopyAsDots}" Command="{Binding CopyAsProfileCommand}">
                                        <MenuItem.Icon>
                                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=ContentDuplicate}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="{x:Static localization:Strings.Delete}" Command="{Binding DeleteProfileCommand}">
                                        <MenuItem.Icon>
                                            <Rectangle Width="16" Height="16" Fill="{DynamicResource BlackColorBrush}">
                                                <Rectangle.OpacityMask>
                                                    <VisualBrush Stretch="Uniform" Visual="{iconPacks:Material Kind=Close}" />
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </ListBox.Resources>
                            <ListBox.InputBindings>
                                <KeyBinding Command="{Binding EditProfileCommand}" Key="F2" />
                                <KeyBinding Command="{Binding DeleteProfileCommand}" Key="Delete" />
                                <KeyBinding Command="{Binding AddHostProfileCommand}" Key="Enter" />
                            </ListBox.InputBindings>
                            <ListBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type GroupItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Expander IsExpanded="True" Style="{StaticResource DefaultExpander}">
                                                            <Expander.Header>
                                                                <Grid>
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="*" />
                                                                        <ColumnDefinition Width="Auto" />
                                                                    </Grid.ColumnDefinitions>
                                                                    <TextBlock Grid.Column="0" Text="{Binding (CollectionViewGroup.Name)}" Style="{DynamicResource DefaultTextBlock}"/>
                                                                    <Button Grid.Column="1" ToolTip="{x:Static localization:Strings.EditGroup}" Command="{Binding DataContext.EditGroupCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding (CollectionViewGroup.Name)}" Visibility="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Grid}}, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Style="{StaticResource CleanButton}">
                                                                        <Rectangle Width="16" Height="16">
                                                                            <Rectangle.OpacityMask>
                                                                                <VisualBrush Stretch="Uniform" Visual="{iconPacks:Modern Kind=Edit}" />
                                                                            </Rectangle.OpacityMask>
                                                                            <Rectangle.Style>
                                                                                <Style TargetType="{x:Type Rectangle}">
                                                                                    <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                                                                    <Style.Triggers>
                                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                                                            <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                                                                        </DataTrigger>
                                                                                    </Style.Triggers>
                                                                                </Style>
                                                                            </Rectangle.Style>
                                                                        </Rectangle>
                                                                    </Button>
                                                                </Grid>
                                                            </Expander.Header>
                                                            <ItemsPresenter />
                                                        </Expander>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </ListBox.GroupStyle>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MetroListBoxItem}">
                                    <Setter Property="ContextMenu" Value="{StaticResource ProfileContextMenu}" />
                                    <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick" />
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <mah:ProgressRing Grid.Row="2" Height="50" Width="50" IsActive="{Binding IsSearching}"/>
                        <Grid Grid.Row="2" VerticalAlignment="Center">
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Profiles.Count}" Value="0" />
                                                <Condition Binding="{Binding IsSearching}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.Setters>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger.Setters>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Button HorizontalAlignment="Center" Focusable="False" Margin="0,0,0,10">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CleanButton}">
                                        <Setter Property="Command" Value="{Binding AddProfileCommand}" />

                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Search, Converter={StaticResource NullOrEmptyToBoolConverter}}" Value="False">
                                                <Setter Property="Command" Value="{Binding ClearSearchCommand}" />
                                                <Setter Property="ToolTip" Value="{x:Static localization:Strings.ClearFilter}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Width="20" Height="20">
                                        <Rectangle.Resources>
                                            <VisualBrush x:Key="VisualPlus" Stretch="Uniform" Visual="{iconPacks:Material Kind=Plus}"/>
                                            <VisualBrush x:Key="VisualClear" Stretch="Uniform" Visual="{iconPacks:Material Kind=FilterRemoveOutline}" />
                                        </Rectangle.Resources>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="OpacityMask" Value="{StaticResource VisualPlus}" />
                                                <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Search, Converter={StaticResource NullOrEmptyToBoolConverter}}" Value="False">
                                                        <Setter Property="OpacityMask" Value="{StaticResource VisualClear}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MessageTextBlock}">
                                                <Setter Property="Text" Value="{x:Static localization:Strings.NoProfilesFoundCreateOne}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Search, Converter={StaticResource NullOrEmptyToBoolConverter}}" Value="False">
                                                        <Setter Property="Text" Value="{x:Static localization:Strings.NothingFound}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </Grid>
                        <Border Grid.Column="0" Grid.Row="4" BorderBrush="{DynamicResource GrayBrush8}" Margin="-10" BorderThickness="0,1,0,0" Background="Transparent">
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Profiles.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Button Height="48" Margin="10,0" Focusable="False">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CleanButton}">
                                        <Setter Property="Command" Value="{Binding AddProfileCommand}" />
                                    </Style>
                                </Button.Style>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Width="20" Height="20">
                                        <Rectangle.Resources>
                                            <VisualBrush x:Key="VisualPlus" Stretch="Uniform" Visual="{iconPacks:Material Kind=Plus}"/>
                                        </Rectangle.Resources>
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="OpacityMask" Value="{StaticResource VisualPlus}" />
                                                <Setter Property="Fill" Value="{DynamicResource GrayBrush3}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Fill" Value="{DynamicResource GrayBrush5}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                    <TextBlock Grid.Column="1" TextWrapping="NoWrap" TextTrimming="WordEllipsis">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MessageTextBlock}">
                                                <Setter Property="Text" Value="{x:Static localization:Strings.AddProfileDots}" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource GrayBrush5}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </Border>
                    </Grid>
                </Expander>
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>